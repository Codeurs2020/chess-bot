//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\ChessBot\AlgebraicNotation\AlgebraicNotation.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ChessBot.AlgebraicNotation {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AlgebraicNotationParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IAlgebraicNotationListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMove([NotNull] AlgebraicNotationParser.MoveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.move"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMove([NotNull] AlgebraicNotationParser.MoveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.moveDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoveDesc([NotNull] AlgebraicNotationParser.MoveDescContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.moveDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoveDesc([NotNull] AlgebraicNotationParser.MoveDescContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.ordinaryMoveDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrdinaryMoveDesc([NotNull] AlgebraicNotationParser.OrdinaryMoveDescContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.ordinaryMoveDesc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrdinaryMoveDesc([NotNull] AlgebraicNotationParser.OrdinaryMoveDescContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.square"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSquare([NotNull] AlgebraicNotationParser.SquareContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.square"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSquare([NotNull] AlgebraicNotationParser.SquareContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.pieceKind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPieceKind([NotNull] AlgebraicNotationParser.PieceKindContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.pieceKind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPieceKind([NotNull] AlgebraicNotationParser.PieceKindContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.source"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSource([NotNull] AlgebraicNotationParser.SourceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.source"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSource([NotNull] AlgebraicNotationParser.SourceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.destination"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDestination([NotNull] AlgebraicNotationParser.DestinationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.destination"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDestination([NotNull] AlgebraicNotationParser.DestinationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.promotionKind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPromotionKind([NotNull] AlgebraicNotationParser.PromotionKindContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.promotionKind"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPromotionKind([NotNull] AlgebraicNotationParser.PromotionKindContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AlgebraicNotationParser.status"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatus([NotNull] AlgebraicNotationParser.StatusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AlgebraicNotationParser.status"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatus([NotNull] AlgebraicNotationParser.StatusContext context);
}
} // namespace ChessBot.AlgebraicNotation
